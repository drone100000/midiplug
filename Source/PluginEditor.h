/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"
#include "PkrSliderPropertyComponent.h"
#include <map>

//==============================================================================
/**
*/
class MidiplugAudioProcessorEditor  : public AudioProcessorEditor,
                                      public SliderListener,
                                      public Timer
{

public:
    MidiplugAudioProcessorEditor (MidiplugAudioProcessor&);
    ~MidiplugAudioProcessorEditor();
    
    //override methods
    void timerCallback() override;
    void resized() override;
    void sliderValueChanged(Slider* slider) override;
    void paint (Graphics& g) override;
    
private:
    /* class variables */
    
    //holder for all the groups
    PropertyPanel _panel;
    //channel slider group
    PkrSliderPropertyComponent* _channelSliderComponent;
    //program slider group
    PkrSliderPropertyComponent* _programSliderComponent;
    //set of CC slider groups
    std::map<Slider*, int> _ccSliders;

    //private method to get the processor pointer.
    MidiplugAudioProcessor& getProcessor() const
    {
        return static_cast<MidiplugAudioProcessor&> (processor);
    }

};


#endif  // PLUGINEDITOR_H_INCLUDED
